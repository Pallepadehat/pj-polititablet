generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model TabletUser {
  id                   Int          @id @default(autoincrement())
  email                String       @unique
  password             String
  name                 String?
  admin                Boolean?     @default(true)
  pnummer              String?
  onDuty               Boolean?     @default(false)
  notifications        Boolean?     @default(false)
  involvedOfficers     Staff[]      @relation("InvolvedOfficers")
  createdEfterlysninger Efterlysning[] @relation("CreatedByUser")
  createdEfterlysningerId Int?
}

model Citizen {
  id            Int       @id @default(autoincrement())
  name          String?
  foedselsdag   String?
  telefon       String?
  licensePoints Int?      @default(0)
  hasLicense    Boolean?  @default(false)
  staffEntries  Staff[]
  created       DateTime  @default(now())
  updated       DateTime  @updatedAt
  efterlysninger Efterlysning[] @relation("CitizenEfterlysninger")
}



model Efterlysning {
  id            Int       @id @default(autoincrement())
  title         String
  beskrivelse   String
  tabletUserId  Int
  citizenId     Int
  closed        Boolean?
  createdByUser TabletUser @relation("CreatedByUser", fields: [tabletUserId], references: [id])
  citizen       Citizen    @relation("CitizenEfterlysninger", fields: [citizenId], references: [id])
  
  created       DateTime  @default(now())
  updated       DateTime  @updatedAt

  @@index([tabletUserId])
  @@index([citizenId])
}


model Staff {
  id              Int       @id @default(autoincrement())
  caseNumber      String?
  responsible     String?
  created         DateTime  @default(now())
  updated         DateTime  @updatedAt

  citizenId       Int
  citizen         Citizen   @relation(fields: [citizenId], references: [id])

  involvedOfficers TabletUser[] @relation("InvolvedOfficers")

  // Add a new field to represent the associated taxes
  associatedTaxes Taxes[]

  @@index([citizenId])
}

model Taxes {
  id          Int      @id @default(autoincrement())
  description String?
  prisonMonths Int?
  fineAmount   Float?
  licensePoints Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Add the opposite relation field on the Taxes model
  staffMembers Staff[]

}
